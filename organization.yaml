openapi: 3.0.3
info:
  title: NBG CIP Organization API
  version: "0.1"
  description: This is the API for managing organizations in the NBG CIP system provided
   on the integration layer. It allows to create, update, delete and retrieve organizations 
   and related customers. Find more information at [Confluence](https://teampenta-dortmund.atlassian.net/wiki/x/BQBSlw).
servers:
  - url: https://ca067a59-f9f0-4cf1-a99a-17753d4f8e68.mock.pstmn.io
paths:
  /organizations:
    get:
      summary: Get a list of organizations
      responses:
        '200':
          description: A list of organizations
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationList'
    post:
      summary: Create a new organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
            example:
              organizationid: "org123"
              tenant: "tenant1"
              name: "Example Organization"
              address:
                houseNumber: "123"
                street: "Main St"
                city: "Metropolis"
                state: "NY"
                postalCode: "12345"
              email: "contact@example.org"
              buyers:
                - buyerid: "buyer123"
                  name: "John Doe"
                  email: "john.doe@example.org"
        required: true
      responses:
        '201':
          description: Organization created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
  /organizations/{organizationId}:
    get:
      summary: Get an organization by ID
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
    put:
      summary: Update an organization by ID
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
            example:
              organizationid: "org123"
              tenant: "tenant1"
              name: "Updated Organization"
              address:
                houseNumber: "456"
                street: "Elm St"
                city: "Gotham"
                state: "NJ"
                postalCode: "67890"
              email: "updated@example.org"
              buyers:
                - buyerid: "buyer456"
                  name: "Jane Smith"
                  email: "jane.smith@example.org"
        required: true
      responses:
        '200':
          description: Organization updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
    delete:
      summary: Delete an organization by ID
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Organization deleted successfully
components:
  schemas:
    OrganizationList:
      type: array
      items:
        $ref: '#/components/schemas/Organization'
    Organization:
      type: object
      properties:
        organizationid:
          type: string
        tenant:
          type: string
        name:
          type: string
        address:
          $ref: '#/components/schemas/Address'
        email:
          type: string
          format: email
        buyers:
          type: array
          items:
            $ref: '#/components/schemas/Buyer'
      example:
        organizationid: "org123"
        tenant: "tenant1"
        name: "Example Organization"
        address:
          houseNumber: "123"
          street: "Main St"
          city: "Metropolis"
          state: "NY"
          postalCode: "12345"
        email: "contact@example.org"
        buyers:
          - buyerid: "buyer123"
            name: "John Doe"
            email: "john.doe@example.org"
    Address:
      type: object
      properties:
        houseNumber:
          type: string
        street:
          type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
      example:
        houseNumber: "123"
        street: "Main St"
        city: "Metropolis"
        state: "NY"
        postalCode: "12345"
    Buyer:
      type: object
      properties:
        buyerid:
          type: string
        name:
          type: string
        email:
          type: string
          format: email
      example:
        buyerid: "buyer123"
        name: "John Doe"
        email: "john.doe@example.org"